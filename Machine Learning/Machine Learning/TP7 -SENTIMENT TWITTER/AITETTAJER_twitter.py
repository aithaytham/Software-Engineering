# -*- coding: utf-8 -*-
"""TP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XUihxReicxYZ02t34qCTZu5bjfjb_MsQ
"""

!pip install tweepy
!pip install textblob
!python -m textblob.download_corpora


import re 
import tweepy
import numpy as np 
from tweepy import OAuthHandler 
from textblob import TextBlob 

class ApiTwitter(object): 
 
	def __init__(self): 

		consumer_key = '6BgisvMLQUHRPIIefrZIC9uWe'
		consumer_secret = 'tHYYcIxoFLu51qtylSc3FGecbYa7zSxWAS6yCEYaP1kWhGHVQR'
		access_token = '469631124-BqTQ9pYfEbE31JusLAMX3FrDB4dBKW2p5BAtNMkT'
		access_token_secret = 'PUDjro88dlAX9aYecskj7GfKyPH1VBWIo2e38yPcEaT1X'

		try: 

			self.auth = OAuthHandler(consumer_key, consumer_secret) 

			self.auth.set_access_token(access_token, access_token_secret) 

			self.api = tweepy.API(self.auth) 
		except: 
			print("Error: Authentication Failed") 

	def clean_tweet(self, tweet): 
		return ' '.join(re.sub("(@[A-Za-z0-9]+)|([^0-9A-Za-z \t])|(\w+:\/\/\S+)", " ", tweet).split()) 

	def get_tweet_sentiment(self, tweet): 
		analyse = TextBlob(self.clean_tweet(tweet))

		if analyse.sentiment.polarity > 0: 
			return 'positive'
		elif analyse.sentiment.polarity == 0: 
			return 'neutral'
		else: 
			return 'negative'

	def get_tweets(self, query, count = 10): 

		tweets = [] 

		try: 

			fetched_tweets = self.api.search(q = query, count = count) 


			for tweet in fetched_tweets: 

				parsed_tweet = {} 

				parsed_tweet['text'] = tweet.text 

				parsed_tweet['sentiment'] = self.get_tweet_sentiment(tweet.text) 

				if tweet.retweet_count > 0: 
					if parsed_tweet not in tweets: 
						tweets.append(parsed_tweet) 
				else: 
					tweets.append(parsed_tweet) 

			return tweets 

		except tweepy.TweepError as e: 
			print("Error : " + str(e)) 

def main(): 
	api = ApiTwitter() 
	tweets = api.get_tweets(query = 'Starbucks', count = 200)
	ptweets = [tweet for tweet in tweets if tweet['sentiment'] == 'positive'] 
	print("Positive tweets percentage: {} %".format(100*len(ptweets)/len(tweets))) 
	ntweets = [tweet for tweet in tweets if tweet['sentiment'] == 'negative'] 
	print("Negative tweets percentage: {} %".format(100*len(ntweets)/len(tweets))) 
	print("Neutral tweets percentage: {} % \ ".format(100*((len(tweets)) - len((ntweets)) - len((ptweets)))/len(tweets)))
	print("\n\nPositive tweets:") 
	for tweet in ptweets[:5]: 
		print(tweet['text']) 

	print("\n\nNegative tweets:") 
	for tweet in ntweets[:5]: 
		print(tweet['text']) 

if __name__ == "__main__": 
	main()